name: Build application

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: build-cargo-registry-${{ runner.os }}
      - name: Run unit tests
        run: cargo test --verbose

  build:
    name: Build binary - ${{ matrix.platform.os-name }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os-name: Linux-aarch64
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os-name: Linux-armv7
            runs-on: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os-name: macOS-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
          - os-name: Windows-aarch64
            runs-on: windows-latest
            target: aarch64-pc-windows-msvc
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform.runs-on }}
    env:
      NAME: cupcake
      OS: ${{ matrix.platform.runs-on }}
      TARGET: ${{ matrix.platform.target }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Compress
        shell: bash
        run: |
          mkdir -p ./artifacts
          if [[ $OS =~ ^macos.*$ ]]; then
            export PATH="$(brew --prefix gnu-tar)/libexec/gnubin:$PATH"
          fi
          if [[ $OS =~ ^windows.*$ ]]; then
              EXEC=$NAME.exe
          else
              EXEC=$NAME
          fi
          mv ./target/$TARGET/release/$EXEC ./$EXEC
          tar -czf ./artifacts/$NAME-$TARGET-${GITHUB_REF_NAME//\//-}.tar.gz $EXEC
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-build-${{ matrix.platform.target }}
          path: |
            ./artifacts

  deploy:
    name: Attach downloads to release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          pattern: release-build-*
          merge-multiple: true
      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.tar.gz
